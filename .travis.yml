# This Travis job script has been generated by a script via
#
#   make_travis_yml_2.hs 'hackage-server.cabal'
#
# For more information, see https://github.com/hvr/multi-ghc-travis
#
language: c
sudo: false

git:
  submodules: true  # whether to recursively clone submodules

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

notifications:
  email:
    # email is sent to the committer and the author, but only if they have access to this repository
    # see https://docs.travis-ci.com/user/notifications/#Email-notifications for details
    on_success: never
    on_failure: always
  irc:
    channels:
      - "chat.freenode.net#hackage"
    template:
      - "\x0313hackage-server\x0f/\x0306%{branch}\x0f \x0314%{commit}\x0f %{message} \x0302\x1f%{build_url}\x0f"

matrix:
  include:
    - compiler: "ghc-7.6.3"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.6.3], sources: [hvr-ghc]}}
    - compiler: "ghc-7.8.4"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.8.4], sources: [hvr-ghc]}}
    - compiler: "ghc-7.10.3"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.10.3], sources: [hvr-ghc]}}
    - compiler: "ghc-8.0.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.0.2], sources: [hvr-ghc]}}
    - compiler: "ghc-8.2.1"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.2.1], sources: [hvr-ghc]}}

before_install:
 - HC=${CC}
 - unset CC
 - PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$PATH
 - PKGNAME="hackage-server"
 - TARGET=":pkg:$PKGNAME"

install:
 - cabal --version
 - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - BENCH=${BENCH---enable-benchmarks}
 - TEST=${TEST---enable-tests}
 - travis_retry cabal update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - if [ -e "cabal.project.local-${HC}" ]; then cp -v "cabal.project.local-${HC}" cabal.project.local; fi
 - rm -f cabal.project.freeze
 - cabal new-build -w ${HC} ${TEST} ${BENCH} --dep -j2 ${TARGET}
 - cabal new-build -w ${HC} --disable-tests --disable-benchmarks --dep -j2 ${TARGET}

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - rm -rf dist/
 - cabal sdist # test that a source-distribution can be generated
 - cd dist/
 - SRCTAR=(${PKGNAME}-*.tar.gz)
 - SRC_BASENAME="${SRCTAR/%.tar.gz}"
 - tar -xvf "./$SRC_BASENAME.tar.gz"
 - cd "$SRC_BASENAME/"
## from here on, CWD is inside the extracted source-tarball
 - rm -fv cabal.project.local
 - "echo 'packages: .' > cabal.project"
 - if [ -e "../../cabal.project" ]; then cp -v "../../cabal.project" cabal.project; fi
 - ln -vs ../../vendor
 - if [ -e "../../cabal.project.local-${HC}" ]; then cp -v "../../cabal.project.local-${HC}" cabal.project.local; fi
 - rm -f cabal.project.freeze
 # this builds all libraries and executables (without tests/benchmarks)
 - cabal new-build -w ${HC} --disable-tests --disable-benchmarks all
 # this builds all libraries and executables (including tests/benchmarks)
 # - rm -rf ./dist-newstyle
 - cabal new-build -w ${HC} ${TEST} ${BENCH} ${TARGET}

 - cabal new-test -w ${HC} -j1 ${TARGET}

# EOF
